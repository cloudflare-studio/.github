name: Handle Dependency Updates

on:
  repository_dispatch:
    types: [dependency_update]

jobs:
  update-dependency:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@cloudflare-studio'
          
      - name: Update Dependency
        id: update
        run: |
          PACKAGE="${{ github.event.client_payload.package }}"
          VERSION="${{ github.event.client_payload.version }}"
          BUMP_TYPE="${{ github.event.client_payload.bump_type }}"
          
          echo "Updating ${PACKAGE} to ${VERSION}"
          
          # Check if package exists in dependencies
          if grep -q "\"${PACKAGE}\"" package.json; then
            # Update the dependency
            npm install "${PACKAGE}@${VERSION}" --save-exact
            
            # Check if there are changes
            if git diff --quiet package.json package-lock.json; then
              echo "No changes needed - already at version ${VERSION}"
              echo "changed=false" >> $GITHUB_OUTPUT
            else
              echo "changed=true" >> $GITHUB_OUTPUT
              echo "package=${PACKAGE}" >> $GITHUB_OUTPUT
              echo "version=${VERSION}" >> $GITHUB_OUTPUT
            fi
          else
            echo "Package ${PACKAGE} not found in dependencies"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Run Tests
        if: steps.update.outputs.changed == 'true'
        run: |
          npm ci
          npm test
          
      - name: Create Pull Request
        if: steps.update.outputs.changed == 'true'
        run: |
          PACKAGE="${{ steps.update.outputs.package }}"
          VERSION="${{ steps.update.outputs.version }}"
          BRANCH="update-${PACKAGE//[@\/]/-}-${VERSION}"
          
          # Create branch
          git checkout -b "$BRANCH"
          
          # Commit changes
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json package-lock.json
          git commit -m "chore: update ${PACKAGE} to ${VERSION}
          
          This is an automated dependency update triggered by a new release of ${PACKAGE}.
          
          Release date: ${{ github.event.client_payload.release_date }}
          Bump type: ${{ github.event.client_payload.bump_type }}"
          
          # Push branch
          git push origin "$BRANCH"
          
          # Create PR body
          cat > pr-body.md << EOF
          ## ðŸ”„ Automated Dependency Update
          
          This PR updates the following dependency:
          - **Package**: \`${PACKAGE}\`
          - **Version**: \`${VERSION}\`
          - **Bump Type**: ${{ github.event.client_payload.bump_type }}
          - **Release Date**: ${{ github.event.client_payload.release_date }}
          
          ### ðŸ“‹ Checklist
          - [x] Dependencies updated
          - [x] Tests pass
          - [ ] Manual review completed
          
          ### ðŸ¤– Automation
          This PR was automatically created in response to a new release of ${PACKAGE}.
          
          ---
          *Please review and merge if all checks pass.*
          EOF
          
          # Create pull request
          gh pr create \
            --title "chore: update ${PACKAGE} to ${VERSION}" \
            --body-file pr-body.md \
            --label "dependencies,automation" \
            --assignee "${{ github.repository_owner }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}